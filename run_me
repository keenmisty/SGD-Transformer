#! /bin/csh -f

#------------------------------------------------------------------------------
# 
# Please change the input file name and project file name.
# If your input data is a shpfile, please convert it to a raster data.
#
# If you need to reclassify your data, please change the NEEDRECLASS to 1,
# and modify the inputclass & outputclass, make sure they are one to one.
# The outputclass should be 1~24. The nodata would be set to 16(waterbody).
#  
#----------------------------- User Define Area: ------------------------------

  set INPUTPATH    = './input'
  set INPUTFILE    = 'example.tif'
  set INPUTPROJ    = 'example.prj'
  set NEEDRECLASS  = 0
  set INPUTCLASS   = "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24"
  set OUTPUTCLASS  = "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24"

#------------------------------------------------------------------------------
#
# Output USGS 24-CLASS:
#
# 1,     'Urban and Built-Up Land'
# 2,     'Dryland Cropland and Pasture'
# 3,     'Irrigated Cropland and Pasture'
# 4,     'Mixed Dryland/Irrigated Cropland and Pasture'
# 5,     'Cropland/Grassland Mosaic'
# 6,     'Cropland/Woodland Mosaic'
# 7,     'Grassland'
# 8,     'Shrubland'
# 9,     'Mixed Shrubland/Grassland'
# 10,    'Savanna'
# 11,    'Deciduous Broadleaf Forest'
# 12,    'Deciduous Needleleaf Forest'
# 13,    'Evergreen Broadleaf Forest'
# 14,    'Evergreen Needleleaf Forest'
# 15,    'Mixed Forest'
# 16,    'Water Bodies'
# 17,    'Herbaceous Wetland'
# 18,    'Wooded Wetland'
# 19,    'Barren or Sparsely Vegetated'
# 20,    'Herbaceous Tundra'
# 21,    'Wooded Tundra'
# 22,    'Mixed Tundra'
# 23,    'Bare Ground Tundra'
# 24,    'Snow or Ice'
#
#------------------------------------------------------------------------------
#
# Program Processes:
#
# 1. Check the inputs.
# 2. Check the environments.
# 3. Change projection.
# 4. Reclassify to USGS 24-class.
# 5. Convert geotiff to ascii format.
# 6. Convert ascii to geogrid binary format.
# 7. Make a index file.
# 8. Clean intermediate files.
# 9. Echo all done.
#
#------------------------------------------------------------------------------

  make clean >& clean.log
  rm *.asc $INPUTPATH/asciidata.* >& rm.log
  rm $INPUTPATH/filename_wgs84.tif $INPUTPATH/f_wgs84_USGS.tif >& rm/log
  find . -type l -delete
  rm *.log $INPUTPATH/*.log

  ln -s src/* .

  rm output/*

  cd $INPUTPATH

  if ( -e $INPUTFILE ) then
     echo 'Got input data!'
  else
     echo 'ERROR! Please move tiff file in this path to input data!'
     exit 
  endif
  


  gdalinfo $INPUTFILE >& tif_info.log

  set ret=`grep -c 'WGS_1984' tif_info.log`
  if ( $ret > 0 ) then
     echo 'Got project WGS_1984.'
     ln -s $INPUTFILE filename_wgs84.tif
  else
     echo 'Projection works...'
     if ( -e $INPUTPROJ ) then
        gdalwarp -s_srs $INPUTPROJ -t_srs EPSG:4326 $INPUTFILE filename_wgs84.tif
     else
        echo 'ERROR! Lost input project file!'
        exit
     endif
  endif
  echo 'Projection done.'

  if ( $NEEDRECLASS > 0 ) then
     echo 'Reclassify to USGS 24-class...'
     python ../gdal_reclassify.py filename_wgs84.tif f_wgs84_USGS.tif -c $INPUTCLASS -r $OUTPUTCLASS -d 16 -n false >& reclassify.log
     set rec=`grep -c -i 'error' reclassify.log`
     if ( $rec < 1 ) then
     	echo 'Reclassing...'
     else
     	echo 'Reclass error'
	exit
     endif
  else
     echo 'Already USGS 24-class.'
     ln -s filename_wgs84.tif f_wgs84_USGS.tif
  endif

  echo 'Convert tif to ascii file...'
  gdal_translate -of "AAIGRid" f_wgs84_USGS.tif asciidata.asc
  echo 'Convert ascii file done.'


  cd ../
  ln -s $INPUTPATH/asciidata.asc .

  make >& compile.log 
  set ret=`grep -c -i 'error' compile.log`
  if ( $ret < 1 ) then
     echo 'Convert ascii to binary...Please wait a minute.'
  else
     echo 'Compile transform error'
     exit
  endif

  mv a.out write.exe
  ./write.exe
  echo 'Convert ascii to binary done.'
  mv 00* output/

  head -6 asciidata.asc >& title.log
  echo 'Make a index file...'
  set NCOL_X=`grep 'ncols' title.log | awk '{print $2}'`
  set NROW_Y=`grep 'nrows' title.log | awk '{print $2}'`
  set LON_XC=`grep 'xllcorner' title.log | awk '{print $2}'`
  set LAT_YC=`grep 'yllcorner' title.log | awk '{print $2}'`
  set NODATA=`grep 'NODATA_value' title.log | awk '{print $2}'`
  set CELLSZ=`grep 'cellsize' title.log | awk '{print $2}'`

cat > tmp.mif <<EOF
type=categorical
category_min=1
category_max=24
projection=regular_ll
dx=$CELLSZ
dy=$CELLSZ
known_x=1.0
known_y=1.0
known_lat = $LAT_YC
known_lon = $LON_XC
wordsize=1
tile_x=$NCOL_X
tile_y=$NROW_Y
tile_z=1
missing_value = $NODATA
units="category"
description="24-category USGS landuse-modify by changm3@SYSU"
EOF

  mv tmp.mif index
  echo 'The data is start from'
  echo $LON_XC $LAT_YC
  echo 'The cellsize is'
  echo $CELLSZ  
  mv index output/


  make clean >& clean.log
  rm *.log $INPUTPATH/*.log
  rm *.asc $INPUTPATH/asciidata.* 
  rm $INPUTPATH/filename_wgs84.tif $INPUTPATH/f_wgs84_USGS.tif
  rm osgeo wpsingest.F Makefile *.py write_geogrid.c 

  echo '******************************************************'
  echo 'All Done!'
  echo '******************************************************'

  exit 0
